[{"/Users/nikitamenkov/Documents/programming/wheater app/wheater-app/src/index.js":"1","/Users/nikitamenkov/Documents/programming/wheater app/wheater-app/src/apis/config.js":"2","/Users/nikitamenkov/Documents/programming/wheater app/wheater-app/src/components/WeatherCard/WeatherCard.js":"3","/Users/nikitamenkov/Documents/programming/wheater app/wheater-app/src/functions/getCardData.js":"4","/Users/nikitamenkov/Documents/programming/wheater app/wheater-app/src/functions/fetchData.js":"5","/Users/nikitamenkov/Documents/programming/wheater app/wheater-app/src/components/Search/Search.js":"6","/Users/nikitamenkov/Documents/programming/wheater app/wheater-app/src/containers/CardDisplay.js":"7","/Users/nikitamenkov/Documents/programming/wheater app/wheater-app/src/functions/Card.js":"8","/Users/nikitamenkov/Documents/programming/wheater app/wheater-app/src/App.js":"9","/Users/nikitamenkov/Documents/programming/wheater app/wheater-app/src/containers/WeatherApp.js":"10","/Users/nikitamenkov/Documents/programming/wheater app/wheater-app/src/components/CardBoard/CardBoard.js":"11","/Users/nikitamenkov/Documents/programming/wheater app/wheater-app/src/components/SmallCard/SmallCard.js":"12"},{"size":244,"mtime":1619099492000,"results":"13","hashOfConfig":"14"},{"size":183,"mtime":1618585902000,"results":"15","hashOfConfig":"14"},{"size":1163,"mtime":1619534313000,"results":"16","hashOfConfig":"14"},{"size":1473,"mtime":1619181634000,"results":"17","hashOfConfig":"14"},{"size":378,"mtime":1619181723000,"results":"18","hashOfConfig":"14"},{"size":1150,"mtime":1619537025000,"results":"19","hashOfConfig":"14"},{"size":2508,"mtime":1619534502000,"results":"20","hashOfConfig":"14"},{"size":346,"mtime":1619092969000,"results":"21","hashOfConfig":"14"},{"size":316,"mtime":1619103642000,"results":"22","hashOfConfig":"14"},{"size":985,"mtime":1619180415000,"results":"23","hashOfConfig":"14"},{"size":667,"mtime":1619535781000,"results":"24","hashOfConfig":"14"},{"size":291,"mtime":1619535009000,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"18j6byl",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/nikitamenkov/Documents/programming/wheater app/wheater-app/src/index.js",[],["55","56"],"/Users/nikitamenkov/Documents/programming/wheater app/wheater-app/src/apis/config.js",[],"/Users/nikitamenkov/Documents/programming/wheater app/wheater-app/src/components/WeatherCard/WeatherCard.js",["57"],"import {useState} from 'react';\n\nconst WeatherCard = (props) => {\n  const [showMore,setShowMore] = useState(false);\n\n  const handleRemove = () => {\n    props.setCardData(prevState=> {\n     return prevState.filter(card=> card.id !== props.id);\n    })\n    props.setData(prevState=>{\n      return prevState.filter(data=>data.city.id !== props.id);\n    })\n    \n    if(props.cardData.length===1) {\n      props.setNoCards(true);\n    }\n    else {\n      props.setNoCards(false);\n    }\n  }\n\n  const handleShowMore = () => {\n    setShowMore(true);\n    props.setCardDataUpdate(props.id);\n    props.setExpandCard(true);\n  }\n  \n\n    return(\n    <div id='weather-card' style={props.expandCard?{display:'none'}:{}}>\n      <button id='remove' onClick={handleRemove}>X</button>\n      <button id='show-more' onClick={handleShowMore}>show more</button>\n      <h1 id='city'>{props.city}</h1>\n      <img  src={`http://openweathermap.org/img/wn/${props.icon}@2x.png`} alt=\"weather img\"></img>\n  <p id=\"weatherName\">{props.weatherName}</p>\n  <p id=\"weatherDate\">{props.weatherDate}</p>\n  <p id=\"temp\">{props.temp}</p>\n  <p id='minTemp'>Min: {props.minTemp}</p>\n  <p id=\"maxTemp\">Max: {props.maxTemp}</p>\n  <p id = \"feelsLike\">Feels like {props.feelsLike}</p>\n    </div>\n    );\n  }\n\n  export default WeatherCard;","/Users/nikitamenkov/Documents/programming/wheater app/wheater-app/src/functions/getCardData.js",["58","59"],"import Card from './Card';\n\nexport const getCardData = (data,setCardData,oneCard) => {\n    let newCardData = [];\n    let cardAmount = oneCard? 1:5;\n\n    for(let i = 0; i< cardAmount; i++) {\n      \n      if(data !==null) {\n        data.map(data=>{\n          let newData  = data.list[i];\n          let city = data.city.name;\n          let id = data.city.id;\n          let newCard = new Card(id,city,newData.weather[0].icon,newData.weather[0].description,newData.dt_txt,\n            newData.main.temp,newData.main.temp_min,newData.main.temp_max,newData.main.feels_like);\n           if(newCard!==[] && !newCardData.includes(newCard)) {\n            newCardData.push(newCard);\n           }\n        })\n       \n      }\n     }\n    setCardData(newCardData);\n}\n\nexport const getCardDataById = (data,setCardData,id,oneCard) => {\n  let newCardData = [];\n  let cardAmount = oneCard? 1:5;\n  for(let i = 0; i< cardAmount; i++) {\n    \n    if(data !==null) {\n      data.map(data=>{\n        let newData  = data.list[i];\n        let city = data.city.name;\n        let cityID = data.city.id;\n        if(cityID===id) {\n        let newCard = new Card(id,city,newData.weather[0].icon,newData.weather[0].description,newData.dt_txt,\n          newData.main.temp,newData.main.temp_min,newData.main.temp_max,newData.main.feels_like);\n         if(newCard!==[] && !newCardData.includes(newCard)) {\n          newCardData.push(newCard);\n         }\n      }\n    })\n     \n    }\n   }\n  return newCardData;\n}\n\n\n","/Users/nikitamenkov/Documents/programming/wheater app/wheater-app/src/functions/fetchData.js",[],"/Users/nikitamenkov/Documents/programming/wheater app/wheater-app/src/components/Search/Search.js",["60"],"/Users/nikitamenkov/Documents/programming/wheater app/wheater-app/src/containers/CardDisplay.js",["61"],"import { useEffect,useState } from 'react';\nimport WeatherCard from '../components/WeatherCard/WeatherCard';\nimport {getCardDataById} from '../functions/getCardData'\nimport CardBoard from '../components/CardBoard/CardBoard';\nimport './card-display.css';\n\nconst CardDisplay = ({setCardData,cardData,data,setData}) => {\n  \n    const [noCards,setNoCards] = useState(true);\n    const [cardDataUpdate,setCardDataUpdate] = useState('');\n    const [expandCard,setExpandCard] = useState(false);\n  \n    useEffect(()=> {\n        if(cardData.length === 0) {\n            setNoCards(true);\n        }\n        else{\n            setNoCards(false)\n        }\n    },[cardData])\n\n    useEffect(()=> {\n        if(cardDataUpdate && expandCard) {\n            let expandedCardData = getCardDataById(data,setCardData,cardDataUpdate,false);\n            setCardData(prevState=> {\n                return prevState.map(card=>card.id===cardDataUpdate? expandedCardData : card);\n            })\n        }\n        else if(cardDataUpdate && !expandCard) {\n            let [closedCard]= getCardDataById(data,setCardData,cardDataUpdate,true);\n            setCardData(prevState=> {\n                return prevState.map(card=>{\n                    let id = Array.isArray(card)?card[0].id: card.id;\n                    \n                    return id===cardDataUpdate? closedCard : card});\n            })\n        }\n\n    },[cardDataUpdate,expandCard]);\n    \n\n    return(\n<div id='card-display'>\n    <div id='greeting'>\n        <p>Hey, pal! Nothing too fancy here, just another weather app. You can add new cards here, delete them and well, just do something, man.</p>\n    </div>\n  \n<div id='cards-container'>\n    \n{cardData.map(card=>!Array.isArray(card)?<WeatherCard id={card.id} key ={card.id} city = {card.city} icon ={card.icon} weatherName={card.weatherName}\n      weatherDate= {card.weatherDate} temp = {card.temp} minTemp={card.minTemp} maxTemp = {card.maxTemp}\nfeelsLike={card.feelsLike} cardData={cardData} setCardData={setCardData} \nnoCards={noCards} setNoCards={setNoCards} cardDataUpdate={cardDataUpdate}\nexpandCard={expandCard} setExpandCard={setExpandCard} setCardDataUpdate={setCardDataUpdate} data={data} setData={setData}/>\n:\n<CardBoard cardBoardData={card} \nexpandCard={expandCard} setExpandCard={setExpandCard} cardDataUpdate={cardDataUpdate} setCardDataUpdate={setCardDataUpdate}/>)}\n\n{noCards? (<div><p id='nothing'>Nothing to show here yet. Make some cards!</p></div>):(<></>)}\n</div>\n</div>\n    )\n}\nexport default CardDisplay;","/Users/nikitamenkov/Documents/programming/wheater app/wheater-app/src/functions/Card.js",[],"/Users/nikitamenkov/Documents/programming/wheater app/wheater-app/src/App.js",[],"/Users/nikitamenkov/Documents/programming/wheater app/wheater-app/src/containers/WeatherApp.js",["62"],"import {useState,useEffect } from 'react';\nimport Search from '../components/Search/Search';\nimport CardDisplay from './CardDisplay';\nimport {getCardData} from '../functions/getCardData'\nimport fetchData from '../functions/fetchData';\nimport {firstThreeCities} from '../apis/config';\n\nfunction WeatherApp() {\n  const [city,setCity] = useState('');\n  const [data,setData] = useState([]);\n  const [cardData,setCardData] = useState([]);\n\n  useEffect(()=>{\n    firstThreeCities.map(city=> {\n        fetchData(city,setData);\n        });\n},[]);\n\n  useEffect(()=> {\n    setTimeout(()=> {\n        getCardData(data,setCardData,true);\n    },100);\n},[data]);\n\n  \n  return (\n    <div className=\"WeatherApp\">\n      <Search setCity={setCity} city={city} data={data} setCardData={setCardData}\n      setData={setData} cardData={cardData}/>\n      <CardDisplay data={data} setCardData={setCardData}\n      city={city} setData={setData} cardData={cardData}/>\n    </div>\n  );\n}\n\nexport default WeatherApp;\n","/Users/nikitamenkov/Documents/programming/wheater app/wheater-app/src/components/CardBoard/CardBoard.js",[],"/Users/nikitamenkov/Documents/programming/wheater app/wheater-app/src/components/SmallCard/SmallCard.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":4,"column":10,"nodeType":"69","messageId":"70","endLine":4,"endColumn":18},{"ruleId":"71","severity":1,"message":"72","line":10,"column":22,"nodeType":"73","messageId":"74","endLine":10,"endColumn":24},{"ruleId":"71","severity":1,"message":"72","line":32,"column":20,"nodeType":"73","messageId":"74","endLine":32,"endColumn":22},{"ruleId":"67","severity":1,"message":"75","line":1,"column":9,"nodeType":"69","messageId":"70","endLine":1,"endColumn":18},{"ruleId":"76","severity":1,"message":"77","line":39,"column":7,"nodeType":"78","endLine":39,"endColumn":34,"suggestions":"79"},{"ruleId":"71","severity":1,"message":"72","line":14,"column":30,"nodeType":"73","messageId":"74","endLine":14,"endColumn":32},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'showMore' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'data' and 'setCardData'. Either include them or remove the dependency array. If 'setCardData' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["82"],"no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},"Update the dependencies array to be: [cardDataUpdate, data, expandCard, setCardData]",{"range":"85","text":"86"},[1382,1409],"[cardDataUpdate, data, expandCard, setCardData]"]