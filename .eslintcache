[{"/Users/nikitamenkov/Documents/programming/wheater app/wheater-app/src/index.js":"1","/Users/nikitamenkov/Documents/programming/wheater app/wheater-app/src/apis/config.js":"2","/Users/nikitamenkov/Documents/programming/wheater app/wheater-app/src/components/WeatherCard/WeatherCard.js":"3","/Users/nikitamenkov/Documents/programming/wheater app/wheater-app/src/functions/getCardData.js":"4","/Users/nikitamenkov/Documents/programming/wheater app/wheater-app/src/functions/fetchData.js":"5","/Users/nikitamenkov/Documents/programming/wheater app/wheater-app/src/components/Search/Search.js":"6","/Users/nikitamenkov/Documents/programming/wheater app/wheater-app/src/containers/CardDisplay.js":"7","/Users/nikitamenkov/Documents/programming/wheater app/wheater-app/src/functions/Card.js":"8","/Users/nikitamenkov/Documents/programming/wheater app/wheater-app/src/App.js":"9","/Users/nikitamenkov/Documents/programming/wheater app/wheater-app/src/containers/WeatherApp.js":"10","/Users/nikitamenkov/Documents/programming/wheater app/wheater-app/src/components/CardBoard/CardBoard.js":"11","/Users/nikitamenkov/Documents/programming/wheater app/wheater-app/src/components/SmallCard/SmallCard.js":"12"},{"size":244,"mtime":1619099492000,"results":"13","hashOfConfig":"14"},{"size":183,"mtime":1618585902000,"results":"15","hashOfConfig":"14"},{"size":1288,"mtime":1619435894000,"results":"16","hashOfConfig":"14"},{"size":1473,"mtime":1619181634000,"results":"17","hashOfConfig":"14"},{"size":378,"mtime":1619181723000,"results":"18","hashOfConfig":"14"},{"size":1146,"mtime":1619185919000,"results":"19","hashOfConfig":"14"},{"size":2326,"mtime":1619435927000,"results":"20","hashOfConfig":"14"},{"size":346,"mtime":1619092969000,"results":"21","hashOfConfig":"14"},{"size":316,"mtime":1619103642000,"results":"22","hashOfConfig":"14"},{"size":985,"mtime":1619180415000,"results":"23","hashOfConfig":"14"},{"size":652,"mtime":1619178700000,"results":"24","hashOfConfig":"14"},{"size":275,"mtime":1619105152000,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"18j6byl",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/Users/nikitamenkov/Documents/programming/wheater app/wheater-app/src/index.js",[],["54","55"],"/Users/nikitamenkov/Documents/programming/wheater app/wheater-app/src/apis/config.js",[],"/Users/nikitamenkov/Documents/programming/wheater app/wheater-app/src/components/WeatherCard/WeatherCard.js",["56"],"/Users/nikitamenkov/Documents/programming/wheater app/wheater-app/src/functions/getCardData.js",["57","58"],"import Card from './Card';\n\nexport const getCardData = (data,setCardData,oneCard) => {\n    let newCardData = [];\n    let cardAmount = oneCard? 1:5;\n\n    for(let i = 0; i< cardAmount; i++) {\n      \n      if(data !==null) {\n        data.map(data=>{\n          let newData  = data.list[i];\n          let city = data.city.name;\n          let id = data.city.id;\n          let newCard = new Card(id,city,newData.weather[0].icon,newData.weather[0].description,newData.dt_txt,\n            newData.main.temp,newData.main.temp_min,newData.main.temp_max,newData.main.feels_like);\n           if(newCard!==[] && !newCardData.includes(newCard)) {\n            newCardData.push(newCard);\n           }\n        })\n       \n      }\n     }\n    setCardData(newCardData);\n}\n\nexport const getCardDataById = (data,setCardData,id,oneCard) => {\n  let newCardData = [];\n  let cardAmount = oneCard? 1:5;\n  for(let i = 0; i< cardAmount; i++) {\n    \n    if(data !==null) {\n      data.map(data=>{\n        let newData  = data.list[i];\n        let city = data.city.name;\n        let cityID = data.city.id;\n        if(cityID===id) {\n        let newCard = new Card(id,city,newData.weather[0].icon,newData.weather[0].description,newData.dt_txt,\n          newData.main.temp,newData.main.temp_min,newData.main.temp_max,newData.main.feels_like);\n         if(newCard!==[] && !newCardData.includes(newCard)) {\n          newCardData.push(newCard);\n         }\n      }\n    })\n     \n    }\n   }\n  return newCardData;\n}\n\n\n","/Users/nikitamenkov/Documents/programming/wheater app/wheater-app/src/functions/fetchData.js",[],"/Users/nikitamenkov/Documents/programming/wheater app/wheater-app/src/components/Search/Search.js",["59"],"import {useEffect} from 'react';\nimport fetchData from '../../functions/fetchData';\nimport cities from 'cities.json';\nconst Search = ({setCity,setData,city,data,setCardData,cardData}) => {\n  \n    const handleSearch = () => {\n        let newCity ='';\n        let cityExistAlready = false;\n\n        cardData.forEach(card=>{\n            if(card.city.toLowerCase() === city) {\n                cityExistAlready = true;\n            }\n        })\n        if (!cityExistAlready) {\n\n        cities.forEach(checkCity=>{\n            if(checkCity.name.toLowerCase()===city) {\n                newCity = city;\n            }\n        })\n        if(!newCity) {\n            alert('city not found');\n        }\n        else {\n            fetchData(city,setData);\n        }\n            \n         }\n         else {\n             alert('city exist already!');\n         }\n        }\n\n    return (\n        <div id=\"search\">\n        <input id=\"cityName\" placeholder=\"Enter your city\" onInput={(event)=>{setCity(event.target.value.toLowerCase())}}></input>\n        <button id=\"search\" onClick={()=>handleSearch()}>Search</button>\n        </div>\n    )\n}\n\nexport default Search;","/Users/nikitamenkov/Documents/programming/wheater app/wheater-app/src/containers/CardDisplay.js",["60"],"/Users/nikitamenkov/Documents/programming/wheater app/wheater-app/src/functions/Card.js",[],"/Users/nikitamenkov/Documents/programming/wheater app/wheater-app/src/App.js",[],"/Users/nikitamenkov/Documents/programming/wheater app/wheater-app/src/containers/WeatherApp.js",["61"],"import {useState,useEffect } from 'react';\nimport Search from '../components/Search/Search';\nimport CardDisplay from './CardDisplay';\nimport {getCardData} from '../functions/getCardData'\nimport fetchData from '../functions/fetchData';\nimport {firstThreeCities} from '../apis/config';\n\nfunction WeatherApp() {\n  const [city,setCity] = useState('');\n  const [data,setData] = useState([]);\n  const [cardData,setCardData] = useState([]);\n\n  useEffect(()=>{\n    firstThreeCities.map(city=> {\n        fetchData(city,setData);\n        });\n},[]);\n\n  useEffect(()=> {\n    setTimeout(()=> {\n        getCardData(data,setCardData,true);\n    },100);\n},[data]);\n\n  \n  return (\n    <div className=\"WeatherApp\">\n      <Search setCity={setCity} city={city} data={data} setCardData={setCardData}\n      setData={setData} cardData={cardData}/>\n      <CardDisplay data={data} setCardData={setCardData}\n      city={city} setData={setData} cardData={cardData}/>\n    </div>\n  );\n}\n\nexport default WeatherApp;\n","/Users/nikitamenkov/Documents/programming/wheater app/wheater-app/src/components/CardBoard/CardBoard.js",[],"/Users/nikitamenkov/Documents/programming/wheater app/wheater-app/src/components/SmallCard/SmallCard.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":4,"column":10,"nodeType":"68","messageId":"69","endLine":4,"endColumn":18},{"ruleId":"70","severity":1,"message":"71","line":10,"column":22,"nodeType":"72","messageId":"73","endLine":10,"endColumn":24},{"ruleId":"70","severity":1,"message":"71","line":32,"column":20,"nodeType":"72","messageId":"73","endLine":32,"endColumn":22},{"ruleId":"66","severity":1,"message":"74","line":1,"column":9,"nodeType":"68","messageId":"69","endLine":1,"endColumn":18},{"ruleId":"75","severity":1,"message":"76","line":30,"column":7,"nodeType":"77","endLine":30,"endColumn":34,"suggestions":"78"},{"ruleId":"70","severity":1,"message":"71","line":14,"column":30,"nodeType":"72","messageId":"73","endLine":14,"endColumn":32},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'showMore' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useEffect' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'data' and 'setCardData'. Either include them or remove the dependency array. If 'setCardData' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["81"],"no-global-assign","no-unsafe-negation",{"desc":"82","fix":"83"},"Update the dependencies array to be: [cardDataUpdate, data, expandCard, setCardData]",{"range":"84","text":"85"},[1213,1240],"[cardDataUpdate, data, expandCard, setCardData]"]